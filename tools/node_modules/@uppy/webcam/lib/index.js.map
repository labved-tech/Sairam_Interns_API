{"version":3,"sources":["index.js"],"names":["require","h","Plugin","Translator","getFileTypeExtension","mimeTypes","canvasToBlob","supportsMediaRecorder","CameraIcon","CameraScreen","PermissionsScreen","toMimeType","fileType","slice","isVideoMimeType","mimeType","test","isImageMimeType","getMediaDevices","navigator","mediaDevices","getUserMedia","mozGetUserMedia","webkitGetUserMedia","opts","Promise","resolve","reject","call","module","exports","uppy","supportsUserMedia","protocol","location","match","id","title","type","icon","defaultLocale","strings","smile","takePicture","startRecording","stopRecording","allowAccessTitle","allowAccessDescription","noCameraTitle","noCameraDescription","recordingStoppedMaxSize","recordingLength","defaultOptions","onBeforeSnapshot","countdown","modes","mirror","facingMode","preferredImageMimeType","preferredVideoMimeType","showRecordingLength","i18nInit","install","bind","setPluginState","render","_start","_stop","_takeSnapshot","_startRecording","_stopRecording","_oneTwoThreeSmile","_focus","webcamActive","setOptions","newOpts","videoConstraints","translator","locale","i18n","translate","i18nArray","translateArray","hasCameraCheck","enumerateDevices","then","devices","some","device","kind","getConstraints","acceptsAudio","indexOf","acceptsVideo","audio","video","Error","constraints","hasCamera","stream","cameraReady","catch","err","cameraError","info","message","_getMediaRecorderOptions","options","MediaRecorder","isTypeSupported","restrictions","preferredVideoMimeTypes","allowedFileTypes","map","filter","acceptableMimeTypes","candidateType","length","recorder","recordingChunks","stoppingBecauseOfMaxSize","addEventListener","event","push","data","maxFileSize","totalSize","reduce","acc","chunk","size","averageChunkSize","expectedEndChunkSize","maxSize","Math","max","start","recordingLengthTimer","setInterval","currentRecordingLength","getPluginState","recordingLengthSeconds","isRecording","stopped","stop","clearInterval","getVideo","file","addFile","isRestriction","log","error","getAudioTracks","forEach","track","getVideoTracks","_getVideoElement","el","querySelector","count","countDown","captureInProgress","setTimeout","_getImage","tagFile","width","videoWidth","height","videoHeight","canvas","document","createElement","ctx","getContext","drawImage","preferredImageMimeTypes","ext","name","Date","now","blob","source","Blob","fileExtension","webcamState","target","mount","uninstall","unmount","VERSION"],"mappings":"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","sourcesContent":["const { h } = require('preact')\nconst { Plugin } = require('@uppy/core')\nconst Translator = require('@uppy/utils/lib/Translator')\nconst getFileTypeExtension = require('@uppy/utils/lib/getFileTypeExtension')\nconst mimeTypes = require('@uppy/utils/lib/mimeTypes')\nconst canvasToBlob = require('@uppy/utils/lib/canvasToBlob')\nconst supportsMediaRecorder = require('./supportsMediaRecorder')\nconst CameraIcon = require('./CameraIcon')\nconst CameraScreen = require('./CameraScreen')\nconst PermissionsScreen = require('./PermissionsScreen')\n\n/**\n * Normalize a MIME type or file extension into a MIME type.\n *\n * @param {string} fileType - MIME type or a file extension prefixed with `.`.\n * @returns {string|undefined} The MIME type or `undefined` if the fileType is an extension and is not known.\n */\nfunction toMimeType (fileType) {\n  if (fileType[0] === '.') {\n    return mimeTypes[fileType.slice(1)]\n  }\n  return fileType\n}\n\n/**\n * Is this MIME type a video?\n *\n * @param {string} mimeType - MIME type.\n * @returns {boolean}\n */\nfunction isVideoMimeType (mimeType) {\n  return /^video\\/[^*]+$/.test(mimeType)\n}\n\n/**\n * Is this MIME type an image?\n *\n * @param {string} mimeType - MIME type.\n * @returns {boolean}\n */\nfunction isImageMimeType (mimeType) {\n  return /^image\\/[^*]+$/.test(mimeType)\n}\n\n/**\n * Setup getUserMedia, with polyfill for older browsers\n * Adapted from: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n */\nfunction getMediaDevices () {\n  // eslint-disable-next-line compat/compat\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // eslint-disable-next-line compat/compat\n    return navigator.mediaDevices\n  }\n\n  const getUserMedia = navigator.mozGetUserMedia || navigator.webkitGetUserMedia\n  if (!getUserMedia) {\n    return null\n  }\n\n  return {\n    getUserMedia (opts) {\n      return new Promise((resolve, reject) => {\n        getUserMedia.call(navigator, opts, resolve, reject)\n      })\n    }\n  }\n}\n/**\n * Webcam\n */\nmodule.exports = class Webcam extends Plugin {\n  static VERSION = require('../package.json').version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.mediaDevices = getMediaDevices()\n    this.supportsUserMedia = !!this.mediaDevices\n    this.protocol = location.protocol.match(/https/i) ? 'https' : 'http'\n    this.id = this.opts.id || 'Webcam'\n    this.title = this.opts.title || 'Camera'\n    this.type = 'acquirer'\n    this.icon = () => (\n      <svg aria-hidden=\"true\" focusable=\"false\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <rect fill=\"#03BFEF\" width=\"32\" height=\"32\" rx=\"16\" />\n          <path d=\"M22 11c1.133 0 2 .867 2 2v7.333c0 1.134-.867 2-2 2H10c-1.133 0-2-.866-2-2V13c0-1.133.867-2 2-2h2.333l1.134-1.733C13.6 9.133 13.8 9 14 9h4c.2 0 .4.133.533.267L19.667 11H22zm-6 1.533a3.764 3.764 0 0 0-3.8 3.8c0 2.129 1.672 3.801 3.8 3.801s3.8-1.672 3.8-3.8c0-2.13-1.672-3.801-3.8-3.801zm0 6.261c-1.395 0-2.46-1.066-2.46-2.46 0-1.395 1.065-2.461 2.46-2.461s2.46 1.066 2.46 2.46c0 1.395-1.065 2.461-2.46 2.461z\" fill=\"#FFF\" fill-rule=\"nonzero\" />\n        </g>\n      </svg>\n    )\n\n    this.defaultLocale = {\n      strings: {\n        smile: 'Smile!',\n        takePicture: 'Take a picture',\n        startRecording: 'Begin video recording',\n        stopRecording: 'Stop video recording',\n        allowAccessTitle: 'Please allow access to your camera',\n        allowAccessDescription: 'In order to take pictures or record video with your camera, please allow camera access for this site.',\n        noCameraTitle: 'Camera Not Available',\n        noCameraDescription: 'In order to take pictures or record video, please connect a camera device',\n        recordingStoppedMaxSize: 'Recording stopped because the file size is about to exceed the limit',\n        recordingLength: 'Recording length %{recording_length}'\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      onBeforeSnapshot: () => Promise.resolve(),\n      countdown: false,\n      modes: [\n        'video-audio',\n        'video-only',\n        'audio-only',\n        'picture'\n      ],\n      mirror: true,\n      facingMode: 'user',\n      preferredImageMimeType: null,\n      preferredVideoMimeType: null,\n      showRecordingLength: false\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.install = this.install.bind(this)\n    this.setPluginState = this.setPluginState.bind(this)\n\n    this.render = this.render.bind(this)\n\n    // Camera controls\n    this._start = this._start.bind(this)\n    this._stop = this._stop.bind(this)\n    this._takeSnapshot = this._takeSnapshot.bind(this)\n    this._startRecording = this._startRecording.bind(this)\n    this._stopRecording = this._stopRecording.bind(this)\n    this._oneTwoThreeSmile = this._oneTwoThreeSmile.bind(this)\n    this._focus = this._focus.bind(this)\n\n    this.webcamActive = false\n\n    if (this.opts.countdown) {\n      this.opts.onBeforeSnapshot = this._oneTwoThreeSmile\n    }\n  }\n\n  setOptions (newOpts) {\n    super.setOptions({\n      ...newOpts,\n      videoConstraints: {\n        // May be undefined but ... handles that\n        ...this.opts.videoConstraints,\n        ...newOpts?.videoConstraints\n      }\n    })\n\n    this.i18nInit()\n  }\n\n  i18nInit () {\n    this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale])\n    this.i18n = this.translator.translate.bind(this.translator)\n    this.i18nArray = this.translator.translateArray.bind(this.translator)\n    this.setPluginState() // so that UI re-renders and we see the updated locale\n  }\n\n  hasCameraCheck () {\n    if (!this.mediaDevices) {\n      return Promise.resolve(false)\n    }\n\n    return this.mediaDevices.enumerateDevices().then(devices => {\n      return devices.some(device => device.kind === 'videoinput')\n    })\n  }\n\n  getConstraints () {\n    const acceptsAudio = this.opts.modes.indexOf('video-audio') !== -1 ||\n      this.opts.modes.indexOf('audio-only') !== -1\n    const acceptsVideo = this.opts.modes.indexOf('video-audio') !== -1 ||\n      this.opts.modes.indexOf('video-only') !== -1 ||\n      this.opts.modes.indexOf('picture') !== -1\n\n    const videoConstraints = this.opts.videoConstraints ?? {\n      facingMode: this.opts.facingMode\n    }\n\n    return {\n      audio: acceptsAudio,\n      video: acceptsVideo ? videoConstraints : false\n    }\n  }\n\n  _start () {\n    if (!this.supportsUserMedia) {\n      return Promise.reject(new Error('Webcam access not supported'))\n    }\n\n    this.webcamActive = true\n    const constraints = this.getConstraints()\n\n    this.hasCameraCheck().then(hasCamera => {\n      this.setPluginState({\n        hasCamera: hasCamera\n      })\n\n      // ask user for access to their camera\n      return this.mediaDevices.getUserMedia(constraints)\n        .then((stream) => {\n          this.stream = stream\n          this.setPluginState({\n            cameraReady: true\n          })\n        })\n        .catch((err) => {\n          this.setPluginState({\n            cameraReady: false,\n            cameraError: err\n          })\n          this.uppy.info(err.message, 'error')\n        })\n    })\n  }\n\n  /**\n   * @returns {object}\n   */\n  _getMediaRecorderOptions () {\n    const options = {}\n\n    // Try to use the `opts.preferredVideoMimeType` or one of the `allowedFileTypes` for the recording.\n    // If the browser doesn't support it, we'll fall back to the browser default instead.\n    // Safari doesn't have the `isTypeSupported` API.\n    if (MediaRecorder.isTypeSupported) {\n      const { restrictions } = this.uppy.opts\n      let preferredVideoMimeTypes = []\n      if (this.opts.preferredVideoMimeType) {\n        preferredVideoMimeTypes = [this.opts.preferredVideoMimeType]\n      } else if (restrictions.allowedFileTypes) {\n        preferredVideoMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isVideoMimeType)\n      }\n\n      const acceptableMimeTypes = preferredVideoMimeTypes.filter((candidateType) =>\n        MediaRecorder.isTypeSupported(candidateType) &&\n          getFileTypeExtension(candidateType))\n      if (acceptableMimeTypes.length > 0) {\n        options.mimeType = acceptableMimeTypes[0]\n      }\n    }\n\n    return options\n  }\n\n  _startRecording () {\n    // only used if supportsMediaRecorder() returned true\n    // eslint-disable-next-line compat/compat\n    this.recorder = new MediaRecorder(this.stream, this._getMediaRecorderOptions())\n    this.recordingChunks = []\n    let stoppingBecauseOfMaxSize = false\n    this.recorder.addEventListener('dataavailable', (event) => {\n      this.recordingChunks.push(event.data)\n\n      const { restrictions } = this.uppy.opts\n      if (this.recordingChunks.length > 1 &&\n          restrictions.maxFileSize != null &&\n          !stoppingBecauseOfMaxSize) {\n        const totalSize = this.recordingChunks.reduce((acc, chunk) => acc + chunk.size, 0)\n        // Exclude the initial chunk from the average size calculation because it is likely to be a very small outlier\n        const averageChunkSize = (totalSize - this.recordingChunks[0].size) / (this.recordingChunks.length - 1)\n        const expectedEndChunkSize = averageChunkSize * 3\n        const maxSize = Math.max(0, restrictions.maxFileSize - expectedEndChunkSize)\n\n        if (totalSize > maxSize) {\n          stoppingBecauseOfMaxSize = true\n          this.uppy.info(this.i18n('recordingStoppedMaxSize'), 'warning', 4000)\n          this._stopRecording()\n        }\n      }\n    })\n\n    // use a \"time slice\" of 500ms: ondataavailable will be called each 500ms\n    // smaller time slices mean we can more accurately check the max file size restriction\n    this.recorder.start(500)\n\n    if (this.opts.showRecordingLength) {\n      // Start the recordingLengthTimer if we are showing the recording length.\n      this.recordingLengthTimer = setInterval(() => {\n        const currentRecordingLength = this.getPluginState().recordingLengthSeconds\n        this.setPluginState({ recordingLengthSeconds: currentRecordingLength + 1 })\n      }, 1000)\n    }\n\n    this.setPluginState({\n      isRecording: true\n    })\n  }\n\n  _stopRecording () {\n    const stopped = new Promise((resolve, reject) => {\n      this.recorder.addEventListener('stop', () => {\n        resolve()\n      })\n      this.recorder.stop()\n\n      if (this.opts.showRecordingLength) {\n        // Stop the recordingLengthTimer if we are showing the recording length.\n        clearInterval(this.recordingLengthTimer)\n        this.setPluginState({ recordingLengthSeconds: 0 })\n      }\n    })\n\n    return stopped.then(() => {\n      this.setPluginState({\n        isRecording: false\n      })\n      return this.getVideo()\n    }).then((file) => {\n      try {\n        this.uppy.addFile(file)\n      } catch (err) {\n        // Logging the error, exept restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }).then(() => {\n      this.recordingChunks = null\n      this.recorder = null\n    }, (error) => {\n      this.recordingChunks = null\n      this.recorder = null\n      throw error\n    })\n  }\n\n  _stop () {\n    if (this.stream) {\n      this.stream.getAudioTracks().forEach((track) => {\n        track.stop()\n      })\n      this.stream.getVideoTracks().forEach((track) => {\n        track.stop()\n      })\n    }\n    this.webcamActive = false\n    this.stream = null\n  }\n\n  _getVideoElement () {\n    return this.el.querySelector('.uppy-Webcam-video')\n  }\n\n  _oneTwoThreeSmile () {\n    return new Promise((resolve, reject) => {\n      let count = this.opts.countdown\n\n      const countDown = setInterval(() => {\n        if (!this.webcamActive) {\n          clearInterval(countDown)\n          this.captureInProgress = false\n          return reject(new Error('Webcam is not active'))\n        }\n\n        if (count > 0) {\n          this.uppy.info(`${count}...`, 'warning', 800)\n          count--\n        } else {\n          clearInterval(countDown)\n          this.uppy.info(this.i18n('smile'), 'success', 1500)\n          setTimeout(() => resolve(), 1500)\n        }\n      }, 1000)\n    })\n  }\n\n  _takeSnapshot () {\n    if (this.captureInProgress) return\n    this.captureInProgress = true\n\n    this.opts.onBeforeSnapshot().catch((err) => {\n      const message = typeof err === 'object' ? err.message : err\n      this.uppy.info(message, 'error', 5000)\n      return Promise.reject(new Error(`onBeforeSnapshot: ${message}`))\n    }).then(() => {\n      return this._getImage()\n    }).then((tagFile) => {\n      this.captureInProgress = false\n      try {\n        this.uppy.addFile(tagFile)\n      } catch (err) {\n        // Logging the error, except restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }, (error) => {\n      this.captureInProgress = false\n      throw error\n    })\n  }\n\n  _getImage () {\n    const video = this._getVideoElement()\n    if (!video) {\n      return Promise.reject(new Error('No video element found, likely due to the Webcam tab being closed.'))\n    }\n\n    const width = video.videoWidth\n    const height = video.videoHeight\n\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext('2d')\n    ctx.drawImage(video, 0, 0)\n\n    const { restrictions } = this.uppy.opts\n    let preferredImageMimeTypes = []\n    if (this.opts.preferredImageMimeType) {\n      preferredImageMimeTypes = [this.opts.preferredImageMimeType]\n    } else if (restrictions.allowedFileTypes) {\n      preferredImageMimeTypes = restrictions.allowedFileTypes.map(toMimeType).filter(isImageMimeType)\n    }\n\n    const mimeType = preferredImageMimeTypes[0] || 'image/jpeg'\n    const ext = getFileTypeExtension(mimeType) || 'jpg'\n    const name = `cam-${Date.now()}.${ext}`\n\n    return canvasToBlob(canvas, mimeType).then((blob) => {\n      return {\n        source: this.id,\n        name: name,\n        data: new Blob([blob], { type: mimeType }),\n        type: mimeType\n      }\n    })\n  }\n\n  getVideo () {\n    const mimeType = this.recordingChunks[0].type\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `webcam-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name: name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType\n    }\n\n    return Promise.resolve(file)\n  }\n\n  _focus () {\n    if (!this.opts.countdown) return\n    setTimeout(() => {\n      this.uppy.info(this.i18n('smile'), 'success', 1500)\n    }, 1000)\n  }\n\n  render () {\n    if (!this.webcamActive) {\n      this._start()\n    }\n\n    const webcamState = this.getPluginState()\n\n    if (!webcamState.cameraReady || !webcamState.hasCamera) {\n      return (\n        <PermissionsScreen\n          icon={CameraIcon}\n          i18n={this.i18n}\n          hasCamera={webcamState.hasCamera}\n        />\n      )\n    }\n\n    return (\n      <CameraScreen\n        {...webcamState}\n        onSnapshot={this._takeSnapshot}\n        onStartRecording={this._startRecording}\n        onStopRecording={this._stopRecording}\n        onFocus={this._focus}\n        onStop={this._stop}\n        i18n={this.i18n}\n        modes={this.opts.modes}\n        showRecordingLength={this.opts.showRecordingLength}\n        supportsRecording={supportsMediaRecorder()}\n        recording={webcamState.isRecording}\n        mirror={this.opts.mirror}\n        src={this.stream}\n      />\n    )\n  }\n\n  install () {\n    this.setPluginState({\n      cameraReady: false,\n      recordingLengthSeconds: 0\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    if (this.stream) {\n      this._stop()\n    }\n\n    this.unmount()\n  }\n}\n"]}